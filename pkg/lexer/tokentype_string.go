// Code generated by "stringer -type=TokenType TokenType.go"; DO NOT EDIT.

package lexer

import "strconv"

const _TokenType_name = "TokErrorTokNoEmitTokWhitespaceTokCharTokStringTokNumberTokDotTokElipsisTokOperTokNamespaceAccessTokOperatorStartTokStarTokPlusTokMinusTokDivTokExpTokLTTokLTETokGTTokGTETokOperatorEndTokSemiColonTokDefereferenceTokReferenceTokAssignmentTokEqualityTokRightParenTokLeftParenTokRightCurlyTokLeftCurlyTokRightBraceTokLeftBraceTokRightArrowTokLeftArrowTokSizeofTokCompoundAssignmentTokForTokWhileTokIfTokElseTokReturnTokFuncDefnTokClassDefnTokNamespaceTokNewTokAsTokDependencyTokTypeTokCommaTokIdentTokComment"

var _TokenType_index = [...]uint16{0, 8, 17, 30, 37, 46, 55, 61, 71, 78, 96, 112, 119, 126, 134, 140, 146, 151, 157, 162, 168, 182, 194, 210, 222, 235, 246, 259, 271, 284, 296, 309, 321, 334, 346, 355, 376, 382, 390, 395, 402, 411, 422, 434, 446, 452, 457, 470, 477, 485, 493, 503}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
