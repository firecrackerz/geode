// Code generated by "stringer -type=TokenType Token.go"; DO NOT EDIT.

package lexer

import "strconv"

const _TokenType_name = "TokErrorTokWhitespaceTokCharTokStringTokNumberTokElipsisTokOperTokOperatorStartTokStarTokPlusTokMinusTokDivTokExpTokLTTokLTETokGTTokGTETokOperatorEndTokSemiColonTokDefereferenceTokReferenceTokAssignmentTokEqualityTokRightParenTokLeftParenTokRightCurlyTokLeftCurlyTokRightBraceTokLeftBraceTokRightArrowTokLeftArrowTokForTokWhileTokIfTokElseTokReturnTokFuncDefnTokTypeTokCommaTokIdentTokComment"

var _TokenType_index = [...]uint16{0, 8, 21, 28, 37, 46, 56, 63, 79, 86, 93, 101, 107, 113, 118, 124, 129, 135, 149, 161, 177, 189, 202, 213, 226, 238, 251, 263, 276, 288, 301, 313, 319, 327, 332, 339, 348, 359, 366, 374, 382, 392}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
