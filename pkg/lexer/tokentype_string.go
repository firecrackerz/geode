// Code generated by "stringer -type=TokenType Token.go"; DO NOT EDIT.

package lexer

import "strconv"

const _TokenType_name = "TokErrorTokWhitespaceTokCharTokStringTokNumberTokElipsisTokOperatorStartTokStarTokPlusTokMinusTokDivTokExpTokLTTokLTETokGTTokGTETokOperatorEndTokSemiColonTokDefereferenceTokReferenceTokAssignmentTokEqualityTokRightParenTokLeftParenTokRightCurlyTokLeftCurlyTokRightBraceTokLeftBraceTokRightArrowTokLeftArrowTokForTokWhileTokIfTokElseTokReturnTokFuncDefnTokTypeTokCommaTokIdentTokComment"

var _TokenType_index = [...]uint16{0, 8, 21, 28, 37, 46, 56, 72, 79, 86, 94, 100, 106, 111, 117, 122, 128, 142, 154, 170, 182, 195, 206, 219, 231, 244, 256, 269, 281, 294, 306, 312, 320, 325, 332, 341, 352, 359, 367, 375, 385}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
